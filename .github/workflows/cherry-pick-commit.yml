---
name: Cherry-pick Commit to Branch

'on':
  workflow_dispatch:
    inputs:
      commit_id:
        description: 'Commit SHA or ID to cherry-pick'
        required: true
        type: string
      target_branch:
        description: 'Target branch name to cherry-pick into'
        required: true
        type: string

jobs:
  cherry-pick:
    runs-on: ubuntu-latest

    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Clone repository
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh auth setup-git
          gh repo clone "${{ github.repository }}" repo
          cd repo
          git fetch origin

      - name: Configure Git
        working-directory: ./repo
        run: |
          git config user.name "React-Native-Windows Bot"
          git config user.email "53619745+rnbot@users.noreply.github.com"

      - name: Checkout target branch and create PR branch
        working-directory: ./repo
        run: |
          git checkout "${{ github.event.inputs.target_branch }}"
          git pull origin "${{ github.event.inputs.target_branch }}"
          
          # Create a new branch for the cherry-pick
          PR_BRANCH="copilot/cherry-pick-${{ github.event.inputs.commit_id }}"
          git checkout -b "$PR_BRANCH"

      - name: Cherry-pick commit
        working-directory: ./repo
        run: |
          COMMIT_ID="${{ github.event.inputs.commit_id }}"
          TARGET_BRANCH="${{ github.event.inputs.target_branch }}"

          echo "üçí Cherry-picking commit $COMMIT_ID into branch $TARGET_BRANCH"

          if git cherry-pick "$COMMIT_ID"; then
            echo "‚úÖ Cherry-pick successful"
          else
            echo "‚ùå Cherry-pick failed with conflicts"
            echo "Conflict details:"
            git status
            exit 1
          fi

      - name: Push branch and create PR
        working-directory: ./repo
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          COMMIT_ID="${{ github.event.inputs.commit_id }}"
          TARGET_BRANCH="${{ github.event.inputs.target_branch }}"
          PR_BRANCH="copilot/cherry-pick-$COMMIT_ID"
          
          # Get the original commit message
          COMMIT_MSG=$(git log -1 --pretty=%B "$COMMIT_ID")
          COMMIT_SHORT=$(echo "$COMMIT_ID" | cut -c1-7)
          
          echo "üì§ Pushing cherry-picked commit to $PR_BRANCH"
          git push --force --set-upstream "https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git" "$PR_BRANCH"
          
          # Create PR body
          PR_BODY=$(cat <<EOF
          ### Type of Change
          - Cherry-pick
          
          ### Why
          Cherry-picking commit $COMMIT_SHORT to $TARGET_BRANCH
          
          ### What
          This PR cherry-picks commit $COMMIT_ID to the $TARGET_BRANCH branch.
          
          **Original commit message:**
          \`\`\`
          $COMMIT_MSG
          \`\`\`
          
          ## Changelog
          Should this change be included in the release notes: review commit message
          EOF
          )
          
          # Create the PR
          if gh pr create \
            --title "Cherry-pick $COMMIT_SHORT to $TARGET_BRANCH" \
            --body "$PR_BODY" \
            --head "$PR_BRANCH" \
            --base "$TARGET_BRANCH" \
            --repo "${{ github.repository }}"; then
            echo "‚úÖ PR created successfully for cherry-pick of $COMMIT_ID to $TARGET_BRANCH"
          else
            echo "‚ÑπÔ∏è PR may already exist or could not be created."
          fi
